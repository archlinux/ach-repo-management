[project]
# PEP 621 project metadata
# See https://www.python.org/dev/peps/pep-0621/
authors = [
  {name = "Arch Linux", email = "arch-projects@lists.archlinux.org"},
]
dynamic = ["version"]
license = {text = "GPL-3.0-or-later"}
requires-python = ">=3.10,<4.0"
dependencies = [
    "aiofiles>=22.1.0",
    "email-validator>=1.3.0",
    "jinja2>=3.1.2",
    "orjson>=3.8.0",
    "pydantic>=1.10.2",
    "python-magic>=0.4.27",
    "pyxdg>=0.28",
    "pyzstd>=0.15.3",
    "subprocess-tee>=0.3.5",
    "tomli>=2.0.1",
]
name = "repod"
description = "Tooling to maintain binary package repositories for Linux distributions using the pacman package manager"
readme = "README.md"
keywords = [
  "arch linux",
  "repository",
  "pacman",
  "packages",
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Environment :: Console",
  "Intended Audience :: End Users/Desktop",
  "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.10",
  "Topic :: Database",
  "Topic :: Database :: Database Engines/Servers",
  "Topic :: Documentation :: Sphinx",
  "Topic :: Internet",
  "Topic :: Security :: Cryptography",
  "Topic :: Software Development",
  "Topic :: System :: Archiving :: Packaging",
  "Topic :: System :: Operating System",
  "Topic :: System :: Software Distribution",
  "Topic :: Utilities",
  "Typing :: Typed",
]

[project.urls]
"Bug Tracker" = "https://gitlab.archlinux.org/archlinux/repod/-/issues/"
homepage = "https://gitlab.archlinux.org/archlinux/repod"
repository = "https://gitlab.archlinux.org/archlinux/repod"
documentation = "https://repod.archlinux.page"

[project.optional-dependencies]
alt_vercmp = ["pyalpm<1.0.0,>=0.10.6"]
alt_file = ["file-magic<1.0.0,>=0.4.0"]

[project.scripts]
repod-file = "repod.cli:repod_file"

[tool.pdm]
version = {source = "scm"}

[tool.pdm.dev-dependencies]
dev = [
    "black>=22.8.0",
    "coverage>=6.4.4",
    "coverage-conditional-plugin>=0.7.0",
    "flake8>=5.0.4",
    "isort>=5.10.1",
    "mypy[install-types,reports]>=0.991",
    "pytest>=7.1.3",
    "pytest-asyncio>=0.19.0",
    "pytest-lazy-fixture>=0.6.3",
    "sphinx>=5.2.1",
    "sphinx-rtd-theme>=1.0.0",
    "sphinx-argparse>=0.3.1",
    "sphinxcontrib-programoutput>=0.17",
    "tox>=3.26.0",
    "vulture>=2.6",
]

[tool.pdm.build]
excludes = [
  "./**/.git",
  "docs/_build/",
  "docs/schema/",
]
includes = [
  "repod",
]
package-dir = "."
source-includes = [
  "tests/",
  "docs/",
  "LICENSE",
  "justfile",
]

[tool.pytest.ini_options]
markers = ["integration", "regex"]
asyncio_mode = "auto"

[tool.black]
line-length = 120
exclude = '''
/(
  \.direnv|
  |\.eggs
  |\.git
  |\.hg
  |\.mypy_cache
  |\.nox
  |\.tox
  |\.venv
  |\.svn
  |_build
  |buck-out
  |db-write
  |db2json
  |dbscripts
  |build
  |dist
)/
'''

[tool.coverage.path]
source = "repod"

[tool.coverage.report]
omit = ["tests/*", ".tox/*", "db-write/*", "db2json/*", "dbscripts/*"]
precision = 2
show_missing = true

[tool.coverage.run]
branch = true
command_line = "-m pytest --junit-xml=junit-report.xml -vv tests/ -m 'not integration and not regex'"
omit = ["tests/*", ".tox/*", "db-write/*", "db2json/*", "dbscripts/*"]
relative_files = true
plugins = ["coverage_conditional_plugin"]

[tool.coverage.xml]
output = ".tox/coverage.xml"

[tool.coverage.coverage_conditional_plugin.rules]
no-cover-nonlinux = "'linux' not in sys.platform"

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
follow_imports = "silent"
follow_imports_for_stubs = true
ignore_errors = false
ignore_missing_imports = true
local_partial_types = false
no_implicit_optional = true
show_error_codes = true
strict_equality = true
strict_optional = true
warn_incomplete_stub = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[build-system]
requires = ["pdm-pep517>=1.0.0"]
build-backend = "pdm.pep517.api"
